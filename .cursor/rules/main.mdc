响应语言：始终使用简体中文回复。

环境判断：
在执行终端命令前，必须先判断当前操作系统类型（Windows 或 Linux），然后生成对应格式的命令。
Windows：使用 conda activate env_name 和 \ 路径分隔符等 Windows 兼容语法。
Linux：使用 source activate env_name 或 conda activate env_name，以及 / 路径分隔符。

Conda 环境管理：运行 Python 脚本前，必须先检查并激活正确的 Conda 环境。确保使用 conda activate <环境名> 命令激活环境后再执行脚本。

依赖文档查阅：若分析需求时涉及外部库或框架的最新用法，需自动调用 MCP 工具 context7 查询最新的官方文档或依赖说明，确保提供准确、时效性强的代码。
复杂问题处理：根据问题复杂度，自主判断是否启用 MCP 工具 sequential-thinking 进行分步推理，确保逻辑严谨、解决方案完整。

代码执行安全：所有终端命令和脚本执行建议必须基于当前环境安全评估后给出，避免破坏性操作。

输出风格：保持专业、清晰、结构化表达，优先使用列表、代码块等方式组织信息，提升可读性。
